name: .NET CI/CD

on:
  pull_request:
    branches: [ "deploy" ]

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build .NET App
        run: dotnet build --no-restore

  dockerize:
    name: Dockerize Backend
    needs: build
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      PROJECT: ${{ secrets.PROJECT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build --platform linux/amd64 -t $DOCKER_USERNAME/$PROJECT -f ./src/backend/DeLong.WebAPI/Dockerfile .
          docker push $DOCKER_USERNAME/$PROJECT

  deploy:
    name: Deploy to AWS
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/app
            docker-compose down
            docker image prune -f
            docker-compose pull
            docker-compose up -d
